#!/usr/bin/env bash

set -eo pipefail

# Install Docker
# https://docs.docker.com/engine/install/ubuntu/
apt-get update -y
apt-get install -y ca-certificates curl gnupg lsb-release
mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list
apt-get update -y
mkdir /etc/docker
chmod +rx /etc/docker
echo '{ "bip": "${docker_bip}" }' > /etc/docker/daemon.json
apt-get install -y docker-ce docker-ce-cli containerd.io

# Install GitLab runner
curl -L --output /usr/local/bin/gitlab-runner https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-amd64
chmod +x /usr/local/bin/gitlab-runner
useradd --comment 'GitLab Runner' --create-home gitlab-runner --shell /bin/bash
gitlab-runner install --user=gitlab-runner --working-directory=/home/gitlab-runner
gitlab-runner start

# If specified, inject the custom certificate
%{ if ca_file != "" }
mkdir -p /etc/gitlab-runner/certs
cat > /etc/gitlab-runner/certs/${gitlab_host}.crt <<EOF
${file(ca_file)}
EOF
%{ endif }

# Connect to GitLab
gitlab-runner register \
  ${register_extra_args} \
  --non-interactive \
  --url "${scheme}://${gitlab_host}" \
  --registration-token "${registration_token}" \
  --name "OpenStack runner - ${name}" \
  --executor docker \
  --docker-network-mode ${docker_network_mode} \
%{ if docker_privileged ~}
  --docker-privileged \
%{ endif ~}
  --docker-image ${docker_image}
